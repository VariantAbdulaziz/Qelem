// Mocks generated by Mockito 5.2.0 from annotations
// in qelem/test/widget_tests/edit_profile_screen_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:flutter_bloc/flutter_bloc.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:qelem/application/profile/edit_profile/edit_profile_bloc.dart'
    as _i3;
import 'package:qelem/application/profile/edit_profile/edit_profile_event.dart'
    as _i5;
import 'package:qelem/application/profile/edit_profile/edit_profile_state.dart'
    as _i2;
import 'package:qelem/domain/profile/profile.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEditProfileState_0 extends _i1.Fake implements _i2.EditProfileState {
}

/// A class which mocks [EditProfileBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockEditProfileBloc extends _i1.Mock implements _i3.EditProfileBloc {
  MockEditProfileBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.EditProfileState get state =>
      (super.noSuchMethod(Invocation.getter(#state),
          returnValue: _FakeEditProfileState_0()) as _i2.EditProfileState);
  @override
  _i4.Stream<_i2.EditProfileState> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
              returnValue: Stream<_i2.EditProfileState>.empty())
          as _i4.Stream<_i2.EditProfileState>);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  void add(_i5.EditProfileEvent? event) =>
      super.noSuchMethod(Invocation.method(#add, [event]),
          returnValueForMissingStub: null);
  @override
  void onEvent(_i5.EditProfileEvent? event) =>
      super.noSuchMethod(Invocation.method(#onEvent, [event]),
          returnValueForMissingStub: null);
  @override
  void emit(_i2.EditProfileState? state) =>
      super.noSuchMethod(Invocation.method(#emit, [state]),
          returnValueForMissingStub: null);
  @override
  void on<E extends _i5.EditProfileEvent>(
          _i6.EventHandler<E, _i2.EditProfileState>? handler,
          {_i6.EventTransformer<E>? transformer}) =>
      super.noSuchMethod(
          Invocation.method(#on, [handler], {#transformer: transformer}),
          returnValueForMissingStub: null);
  @override
  void onTransition(
          _i6.Transition<_i5.EditProfileEvent, _i2.EditProfileState>?
              transition) =>
      super.noSuchMethod(Invocation.method(#onTransition, [transition]),
          returnValueForMissingStub: null);
  @override
  _i4.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i4.Future<void>);
  @override
  void onChange(_i6.Change<_i2.EditProfileState>? change) =>
      super.noSuchMethod(Invocation.method(#onChange, [change]),
          returnValueForMissingStub: null);
  @override
  void addError(Object? error, [StackTrace? stackTrace]) =>
      super.noSuchMethod(Invocation.method(#addError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  void onError(Object? error, StackTrace? stackTrace) =>
      super.noSuchMethod(Invocation.method(#onError, [error, stackTrace]),
          returnValueForMissingStub: null);
}

/// A class which mocks [Profile].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfile extends _i1.Mock implements _i7.Profile {
  MockProfile() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: 0) as int);
  @override
  String get userName =>
      (super.noSuchMethod(Invocation.getter(#userName), returnValue: '')
          as String);
  @override
  String get firstName =>
      (super.noSuchMethod(Invocation.getter(#firstName), returnValue: '')
          as String);
  @override
  String get lastName =>
      (super.noSuchMethod(Invocation.getter(#lastName), returnValue: '')
          as String);
  @override
  String get role =>
      (super.noSuchMethod(Invocation.getter(#role), returnValue: '') as String);
  @override
  String get profilePictureUrl => (super
          .noSuchMethod(Invocation.getter(#profilePictureUrl), returnValue: '')
      as String);
}
