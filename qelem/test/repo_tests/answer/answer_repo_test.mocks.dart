// Mocks generated by Mockito 5.2.0 from annotations
// in qelem/test/repo_tests/answer/answer_repo_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:qelem/domain/answer/answer.dart' as _i6;
import 'package:qelem/domain/answer/answer_form.dart' as _i7;
import 'package:qelem/domain/common/vote.dart' as _i8;
import 'package:qelem/infrastructure/answer/answer_api.dart' as _i2;
import 'package:qelem/infrastructure/answer/answer_repoistory.dart' as _i4;
import 'package:qelem/util/either.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAnswerApi_0 extends _i1.Fake implements _i2.AnswerApi {}

class _FakeEither_1<T> extends _i1.Fake implements _i3.Either<T> {}

/// A class which mocks [AnswerRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnswerRepository extends _i1.Mock implements _i4.AnswerRepository {
  MockAnswerRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AnswerApi get answerApi =>
      (super.noSuchMethod(Invocation.getter(#answerApi),
          returnValue: _FakeAnswerApi_0()) as _i2.AnswerApi);
  @override
  _i5.Future<_i3.Either<List<_i6.Answer>>> getAllAnswers() =>
      (super.noSuchMethod(Invocation.method(#getAllAnswers, []),
              returnValue: Future<_i3.Either<List<_i6.Answer>>>.value(
                  _FakeEither_1<List<_i6.Answer>>()))
          as _i5.Future<_i3.Either<List<_i6.Answer>>>);
  @override
  _i5.Future<_i3.Either<_i6.Answer>> getAnswerById(int? answerId) =>
      (super.noSuchMethod(Invocation.method(#getAnswerById, [answerId]),
              returnValue: Future<_i3.Either<_i6.Answer>>.value(
                  _FakeEither_1<_i6.Answer>()))
          as _i5.Future<_i3.Either<_i6.Answer>>);
  @override
  _i5.Future<_i3.Either<_i6.Answer>> createAnswer(
          {_i7.AnswerForm? answerForm}) =>
      (super.noSuchMethod(
              Invocation.method(#createAnswer, [], {#answerForm: answerForm}),
              returnValue: Future<_i3.Either<_i6.Answer>>.value(
                  _FakeEither_1<_i6.Answer>()))
          as _i5.Future<_i3.Either<_i6.Answer>>);
  @override
  _i5.Future<_i3.Either<void>> deleteAnswer(int? answerId) =>
      (super.noSuchMethod(Invocation.method(#deleteAnswer, [answerId]),
              returnValue:
                  Future<_i3.Either<void>>.value(_FakeEither_1<void>()))
          as _i5.Future<_i3.Either<void>>);
  @override
  _i5.Future<_i3.Either<_i6.Answer>> updateAnswer(_i6.Answer? answer) =>
      (super.noSuchMethod(Invocation.method(#updateAnswer, [answer]),
              returnValue: Future<_i3.Either<_i6.Answer>>.value(
                  _FakeEither_1<_i6.Answer>()))
          as _i5.Future<_i3.Either<_i6.Answer>>);
  @override
  _i5.Future<_i3.Either<_i6.Answer>> voteAnswer(
          int? answerId, _i8.Vote? vote) =>
      (super.noSuchMethod(Invocation.method(#voteAnswer, [answerId, vote]),
              returnValue: Future<_i3.Either<_i6.Answer>>.value(
                  _FakeEither_1<_i6.Answer>()))
          as _i5.Future<_i3.Either<_i6.Answer>>);
  @override
  _i5.Future<_i3.Either<List<_i6.Answer>>> getAnswersByQuestionId(
          int? questionId) =>
      (super.noSuchMethod(
              Invocation.method(#getAnswersByQuestionId, [questionId]),
              returnValue: Future<_i3.Either<List<_i6.Answer>>>.value(
                  _FakeEither_1<List<_i6.Answer>>()))
          as _i5.Future<_i3.Either<List<_i6.Answer>>>);
}
