// Mocks generated by Mockito 5.2.0 from annotations
// in qelem/test/answer_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i10;

import 'package:mockito/mockito.dart' as _i1;
import 'package:qelem/data/local/local_database/qelem_local_storage.dart'
    as _i4;
import 'package:qelem/domain/answer/answer.dart' as _i7;
import 'package:qelem/domain/answer/answer_form.dart' as _i8;
import 'package:qelem/domain/auth/user.dart' as _i6;
import 'package:qelem/domain/common/vote.dart' as _i11;
import 'package:qelem/infrastructure/answer/answer_api.dart' as _i2;
import 'package:qelem/infrastructure/answer/answer_repoistory.dart' as _i9;
import 'package:qelem/infrastructure/question/question_api.dart' as _i3;
import 'package:qelem/util/either.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAnswerApi_0 extends _i1.Fake implements _i2.AnswerApi {}

class _FakeQuestionApi_1 extends _i1.Fake implements _i3.QuestionApi {}

class _FakeDatabaseHelper_2 extends _i1.Fake implements _i4.DatabaseHelper {}

class _FakeEither_3<T> extends _i1.Fake implements _i5.Either<T> {}

class _FakeUser_4 extends _i1.Fake implements _i6.User {}

class _FakeDateTime_5 extends _i1.Fake implements DateTime {}

class _Fake$AnswerCopyWith_6<$Res> extends _i1.Fake
    implements _i7.$AnswerCopyWith<$Res> {}

class _Fake$AnswerFormCopyWith_7<$Res> extends _i1.Fake
    implements _i8.$AnswerFormCopyWith<$Res> {}

/// A class which mocks [AnswerRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnswerRepository extends _i1.Mock implements _i9.AnswerRepository {
  MockAnswerRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AnswerApi get answerApi =>
      (super.noSuchMethod(Invocation.getter(#answerApi),
          returnValue: _FakeAnswerApi_0()) as _i2.AnswerApi);
  @override
  _i3.QuestionApi get questionApi =>
      (super.noSuchMethod(Invocation.getter(#questionApi),
          returnValue: _FakeQuestionApi_1()) as _i3.QuestionApi);
  @override
  _i4.DatabaseHelper get databaseHelper =>
      (super.noSuchMethod(Invocation.getter(#databaseHelper),
          returnValue: _FakeDatabaseHelper_2()) as _i4.DatabaseHelper);
  @override
  _i10.Future<_i5.Either<List<_i7.Answer>>> getAnswerForQuestion(
          int? questionId) =>
      (super.noSuchMethod(
              Invocation.method(#getAnswerForQuestion, [questionId]),
              returnValue: Future<_i5.Either<List<_i7.Answer>>>.value(
                  _FakeEither_3<List<_i7.Answer>>()))
          as _i10.Future<_i5.Either<List<_i7.Answer>>>);
  @override
  _i10.Future<_i5.Either<_i7.Answer>> getAnswerById(int? answerId) =>
      (super.noSuchMethod(Invocation.method(#getAnswerById, [answerId]),
              returnValue: Future<_i5.Either<_i7.Answer>>.value(
                  _FakeEither_3<_i7.Answer>()))
          as _i10.Future<_i5.Either<_i7.Answer>>);
  @override
  _i10.Future<_i5.Either<_i7.Answer>> createAnswer(
          {_i8.AnswerForm? answerForm}) =>
      (super.noSuchMethod(
              Invocation.method(#createAnswer, [], {#answerForm: answerForm}),
              returnValue: Future<_i5.Either<_i7.Answer>>.value(
                  _FakeEither_3<_i7.Answer>()))
          as _i10.Future<_i5.Either<_i7.Answer>>);
  @override
  _i10.Future<_i5.Either<void>> deleteAnswer(int? answerId) =>
      (super.noSuchMethod(Invocation.method(#deleteAnswer, [answerId]),
              returnValue:
                  Future<_i5.Either<void>>.value(_FakeEither_3<void>()))
          as _i10.Future<_i5.Either<void>>);
  @override
  _i10.Future<_i5.Either<_i7.Answer>> updateAnswer(_i7.Answer? answer) =>
      (super.noSuchMethod(Invocation.method(#updateAnswer, [answer]),
              returnValue: Future<_i5.Either<_i7.Answer>>.value(
                  _FakeEither_3<_i7.Answer>()))
          as _i10.Future<_i5.Either<_i7.Answer>>);
  @override
  _i10.Future<_i5.Either<_i7.Answer>> voteAnswer(
          int? answerId, _i11.Vote? vote) =>
      (super.noSuchMethod(Invocation.method(#voteAnswer, [answerId, vote]),
              returnValue: Future<_i5.Either<_i7.Answer>>.value(
                  _FakeEither_3<_i7.Answer>()))
          as _i10.Future<_i5.Either<_i7.Answer>>);
  @override
  _i10.Future<_i5.Either<List<_i7.Answer>>> getAnswersByQuestionId(
          int? questionId) =>
      (super.noSuchMethod(
              Invocation.method(#getAnswersByQuestionId, [questionId]),
              returnValue: Future<_i5.Either<List<_i7.Answer>>>.value(
                  _FakeEither_3<List<_i7.Answer>>()))
          as _i10.Future<_i5.Either<List<_i7.Answer>>>);
}

/// A class which mocks [User].
///
/// See the documentation for Mockito's code generation for more information.
class MockUser extends _i1.Mock implements _i6.User {
  MockUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: 0) as int);
  @override
  String get userName =>
      (super.noSuchMethod(Invocation.getter(#userName), returnValue: '')
          as String);
  @override
  String get firstName =>
      (super.noSuchMethod(Invocation.getter(#firstName), returnValue: '')
          as String);
  @override
  String get lastName =>
      (super.noSuchMethod(Invocation.getter(#lastName), returnValue: '')
          as String);
  @override
  String get profilePicture =>
      (super.noSuchMethod(Invocation.getter(#profilePicture), returnValue: '')
          as String);
}

/// A class which mocks [Answer].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnswer extends _i1.Mock implements _i7.Answer {
  MockAnswer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get id =>
      (super.noSuchMethod(Invocation.getter(#id), returnValue: 0) as int);
  @override
  String get content =>
      (super.noSuchMethod(Invocation.getter(#content), returnValue: '')
          as String);
  @override
  int get questionId =>
      (super.noSuchMethod(Invocation.getter(#questionId), returnValue: 0)
          as int);
  @override
  _i6.User get author => (super.noSuchMethod(Invocation.getter(#author),
      returnValue: _FakeUser_4()) as _i6.User);
  @override
  int get upVotes =>
      (super.noSuchMethod(Invocation.getter(#upVotes), returnValue: 0) as int);
  @override
  int get downVotes =>
      (super.noSuchMethod(Invocation.getter(#downVotes), returnValue: 0)
          as int);
  @override
  _i11.Vote get userVote => (super.noSuchMethod(Invocation.getter(#userVote),
      returnValue: _i11.Vote.upVote) as _i11.Vote);
  @override
  DateTime get createdAt => (super.noSuchMethod(Invocation.getter(#createdAt),
      returnValue: _FakeDateTime_5()) as DateTime);
  @override
  DateTime get updatedAt => (super.noSuchMethod(Invocation.getter(#updatedAt),
      returnValue: _FakeDateTime_5()) as DateTime);
  @override
  _i7.$AnswerCopyWith<_i7.Answer> get copyWith =>
      (super.noSuchMethod(Invocation.getter(#copyWith),
              returnValue: _Fake$AnswerCopyWith_6<_i7.Answer>())
          as _i7.$AnswerCopyWith<_i7.Answer>);
}

/// A class which mocks [AnswerForm].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnswerForm extends _i1.Mock implements _i8.AnswerForm {
  MockAnswerForm() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get questionId =>
      (super.noSuchMethod(Invocation.getter(#questionId), returnValue: 0)
          as int);
  @override
  String get content =>
      (super.noSuchMethod(Invocation.getter(#content), returnValue: '')
          as String);
  @override
  _i8.$AnswerFormCopyWith<_i8.AnswerForm> get copyWith =>
      (super.noSuchMethod(Invocation.getter(#copyWith),
              returnValue: _Fake$AnswerFormCopyWith_7<_i8.AnswerForm>())
          as _i8.$AnswerFormCopyWith<_i8.AnswerForm>);
}
